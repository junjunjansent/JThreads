const mongoose = require("mongoose");

// ID of User (autogenerated)
// - Login Details (Email and password)*
// - Profile Photo (selection)
// - Age, Gender, Phone Number
// - Default Shipping Address
// - Transaction History & Status

// note capitalisation, it is an object wrapper type
const userSchema = new mongoose.Schema(
  {
    username: {
      type: String,
      unique: true, //TODO, workout unique validator errors
      required: [true, "Username is required"],
      lowercase: true,
      trim: true,
    },
    email: {
      type: String,
      unique: true, //TODO, workout unique validator errors
      required: [true, "Email is required"],
      trim: true,
      match: [
        /^[-.\w]+@[-.\w]+\.[-.\w]{2,}$/,
        `Email needs to be in correct format`,
      ],
    },
    password: {
      type: String,
      required: [true, "Password is required"],
    },
    firstName: {
      type: String,
      trim: true,
      minLength: [2, "Expecting min. 2 characters"],
    },
    lastName: {
      type: String,
      trim: true,
      minLength: [2, "Expecting min. 2 characters"],
    },
    birthday: {
      type: Date,
      min: "1900-01-01", // TODO: fix hardcoded dates
      max: "2025-01-01",
    },
    gender: {
      type: String,
      trim: true,
      enum: {
        values: ["M", "F", "X"],
        message: 'Gender must be either "M" or "F" or "X"',
      },
    },
    phoneNumber: {
      type: String, //cause can have leading zeros
      trim: true,
      match: [
        /^\+?[1-9]\d{6,14}$/,
        "Expected valid international phone number",
      ],
    },
    profilePhoto: { type: String },
    defaultShippingAddress: { type: String },
  },
  { timestamps: true }
);

// Remove password
userSchema.set("toJSON", {
  transform: (document, returnedObject) => {
    delete returnedObject.password;
  },
});

// Compile the schema into a model:
const User = mongoose.model("User", userSchema);

// Export the model:
module.exports = User;
